include("../JuliRay.jl")
Base.@irrational ¬∞ 0.0174532925199432957692369076848861271344 (big(pi)/big(180))
œÜ=MathConstants.œÜ
include("../PlatonicSolids.jl")

##%
Œµ=10^(-1.2)

function f(x)
    ifelse(x>0,exp(-1/x),0)
end
function g(x)
    f(2x/‚àö3)/(f(2x/‚àö3)+f(2/‚àö3-2x/‚àö3))
end
function Smooth(a,b,x)
    g((x-a)/(b-a))
end

function ‚Ñù¬≥‚≠¢S¬≥(p::Array{T,1}) where T<:Real
    if length(p)‚â†3
        error("No Point on ‚Ñù¬≥")
    end
    return [2p[1]/(1+p[1]^2+p[2]^2+p[3]^2),2p[2]/(1+p[1]^2+p[2]^2+p[3]^2),2p[3]/(1+p[1]^2+p[2]^2+p[3]^2),(-1+p[1]^2+p[2]^2+p[3]^2)/(1+p[1]^2+p[2]^2+p[3]^2)]
end
function ‚Ñù¬≥‚≠¢S¬≥(p::Array{T,1},Œ∏::Real) where T<:Real
    if length(p)‚â†3
        error("No Point on ‚Ñù¬≥")
    elseif Œ∏<Œµ
        return [p[1:3]...,0.0]
    else
        c=[0,0,0,cot(Œ∏)]
        r=1/sin(Œ∏)
        P=p*cot((œÄ/2-Œ∏)/2+œÄ/4)
        return ‚Ñù¬≥‚≠¢S¬≥(P)*r+c
    end
end
function S¬≥‚≠¢‚Ñù¬≥(q::Array{T,1}) where T<:Real
    if length(q)‚â†4
        error("No Point on S¬≥")
    elseif !(norm(q) ‚âà 1.0)
        print(norm(q))
        error("No Point on unit S¬≥, radius: $(norm(q))")
    end
    return [q[1]/(1-q[4]),q[2]/(1-q[4]),q[3]/(1-q[4])]
end
function S¬≥‚≠¢‚Ñù¬≥(q::Array{T,1},Œ∏::Real) where T<:Real
    if length(q)‚â†4
        error("No Point on S¬≥")
    elseif Œ∏<Œµ
        return q[1:3]
    else
        c=[0,0,0,cot(Œ∏)]
        r=1/sin(Œ∏)
        return S¬≥‚≠¢‚Ñù¬≥((q-c)/r)*tan((œÄ/2-Œ∏)/2+œÄ/4)
    end
end
function ‚Ñù‚Å¥‚≠¢S¬≥(p::Array{T,1},Œ∏::Real) where T<:Real
    if Œ∏<Œµ
        return [p[1:3]...,0.0]
    else
        R=1/sin(Œ∏)
        O=[0,0,0,cot(Œ∏)]
        return O+R*normalize(p-O)
    end
end

function NormalVector(p‚ÇÅ::RealVector,p‚ÇÇ::RealVector,p‚ÇÉ::RealVector,p‚ÇÑ::RealVector)
    A=hcat(p‚ÇÅ-p‚ÇÑ,p‚ÇÇ-p‚ÇÑ,p‚ÇÉ-p‚ÇÑ)
    return normalize([(-1)^i*det(A[deleteat!(collect(1:4),i),:]) for i ‚àà 1:4])
end

function Mirror(q::RealVector,p‚ÇÅ::RealVector,p‚ÇÇ::RealVector,p‚ÇÉ::RealVector)
    ùíè=NormalVector(p‚ÇÅ,p‚ÇÇ,p‚ÇÉ)
    return q-2*dot(ùíè,q-p‚ÇÅ)*ùíè
end
function Mirror(q::RealVector,p‚ÇÅ::RealVector,p‚ÇÇ::RealVector,p‚ÇÉ::RealVector,p‚ÇÑ::RealVector)
    ùíè=NormalVector(p‚ÇÅ,p‚ÇÇ,p‚ÇÉ,p‚ÇÑ)
    return q-2*dot(ùíè,q-p‚ÇÅ)*ùíè
end
function Mirror(q::RealVector,p‚ÇÅ::RealVector,p‚ÇÇ::RealVector,p‚ÇÉ::RealVector,p‚ÇÑ::RealVector, Œ∏)
    ùíè=NormalVector(p‚ÇÅ,p‚ÇÇ,p‚ÇÉ,p‚ÇÑ)
    return ‚Ñù‚Å¥‚≠¢S¬≥(q-2*dot(ùíè,q-p‚ÇÅ)*ùíè,Œ∏)
end

function PickFace(cell::CELL, v::RealVector,POINTS¬≥)
    if norm(v) ‚âà 0
        error("vector v must be non-zero")
    end
    faces=vertices.(cell)
    fpts=(i->POINTS¬≥[i]).(faces)
    return cell[findmax([dot(v,+(pts...)) for pts ‚àà fpts])[2]]
end

function NewCell(cell::CELL,v::RealVector,Œ∏,POINTS¬≥, POINTS‚Å¥)
    n=length(POINTS¬≥)
    c=copy(cell)
    face=PickFace(cell,v,POINTS¬≥)
    IND_face=vertices(face)
    IND_cell=Int[]
    for f ‚àà c for e ‚àà f for v ‚àà e push!(IND_cell,v) end end end
    IND_cell=union(IND_cell)
    IND_cell2=[
        if i ‚àà IND_face
            i
        else
            push!(POINTS¬≥,Mirror(POINTS¬≥[i],POINTS¬≥[IND_face[1]],POINTS¬≥[IND_face[2]],POINTS¬≥[IND_face[3]]));
            if Œ∏<Œµ
                push!(POINTS‚Å¥,[POINTS¬≥[end]...,0]);
            else
                O=[0,0,0,cot(Œ∏)]
                push!(POINTS‚Å¥,Mirror(POINTS‚Å¥[i],O,POINTS‚Å¥[IND_face[1]],POINTS‚Å¥[IND_face[2]],POINTS‚Å¥[IND_face[3]],Œ∏));
            end
            n=n+1
        end
        for i ‚àà IND_cell]
    return [[[IND_cell2[findfirst(w->w==v,IND_cell)] for v ‚àà e] for e ‚àà f] for f ‚àà c]
end

function SphericalSphere(v,r::Real,Œ∏::Real) where T<:RealVector
    V=S¬≥‚≠¢‚Ñù¬≥(v,Œ∏)
    return Sphere(V,r)
end

function SphericalCylinder(v‚ÇÅ,v‚ÇÇ,r::Real,Œ∏::Real) where T<:RealVector
    w‚ÇÅ=‚Ñù‚Å¥‚≠¢S¬≥((v‚ÇÅ+v‚ÇÇ)/2,Œ∏)
    V‚ÇÅ=S¬≥‚≠¢‚Ñù¬≥(v‚ÇÅ,Œ∏)
    V‚ÇÇ=S¬≥‚≠¢‚Ñù¬≥(v‚ÇÇ,Œ∏)
    W‚ÇÅ=S¬≥‚≠¢‚Ñù¬≥(w‚ÇÅ,Œ∏)
    return Arc(V‚ÇÅ,W‚ÇÅ,V‚ÇÇ,r)
end

function SphericalPolygon(v::Array{T,1},Œ∏::Real) where T<:RealVector
    n=length(v)
    u=‚Ñù‚Å¥‚≠¢S¬≥(+(v...)/n,Œ∏)
    v‚ÇÅ=v[1]
    v‚ÇÇ=v[2]
    v‚ÇÉ=v[3]
    V=(q->S¬≥‚≠¢‚Ñù¬≥(q,Œ∏)).(v)
    U=S¬≥‚≠¢‚Ñù¬≥(u,Œ∏)
    w=[‚Ñù‚Å¥‚≠¢S¬≥((v[i]+v[mod(i,length(v))+1])/2,Œ∏) for i ‚àà 1:length(v)]
    W=(q->S¬≥‚≠¢‚Ñù¬≥(q,Œ∏)).(w)
    if Œ∏<Œµ
        return Polygon(V)
    elseif rank(hcat(V...),atol=1.0e-4)==2
    # elseif rank(hcat(V...),atol=1.0e-12)==2
        m=4
        vw=copy(v)
        for _ ‚àà 1:m
            l=length(vw)
            vw=[‚Ñù‚Å¥‚≠¢S¬≥((vw[(i+1)√∑2]+vw[mod(i√∑2,l)+1])/2,Œ∏) for i ‚àà 1:2l]
        end
        VW=(q->S¬≥‚≠¢‚Ñù¬≥(q,Œ∏)).(vw)
        return csgUnion(Polygon(VW))
    else
        O=Circumcenter(U,V[1],V[2],V[3])
        sphere=Sphere(O,norm(U-O))
        N=NormalVector(V[1],W[1],V[2]);
        direction=sign(dot(N,O-U))

        cylinders=csgIntersection([
                (V‚ÇÅ=V[i];
                V‚ÇÇ=V[mod(i,n)+1];
                V‚ÇÉ=V[mod(i+1,n)+1];
                C=Circumcenter(V‚ÇÅ,W[i],V‚ÇÇ);
                N=NormalVector(V‚ÇÅ,W[i],V‚ÇÇ);
                direction=sign(dot(N,U-W[i]));
                cylinder=Cylinder(C,C+2*direction*norm(U-O)*N,norm(U-O)))
                for i ‚àà 1:n
                ])
        return csgClip(sphere,cylinders)
    end
end

function Cells2Object(cells::Array{CELL,1},Œ∏,POINTS‚Å¥;r·µ•=0.05,r‚Çë=0.025,color=RGB(1,1,1))
    cs=copy(cells)
    fs=DeleteDuplicates(vcat(cs...))
    es=DeleteDuplicates(vcat(fs...))
    vs=DeleteDuplicates(vcat(es...))
    V=rgbColor(csgUnion([SphericalSphere(POINTS‚Å¥[v],r·µ•,Œ∏) for v ‚àà vs]),RGB(0.1,0.1,0.1))
    E=rgbColor(csgUnion([SphericalCylinder(POINTS‚Å¥[e[1]],POINTS‚Å¥[e[2]],r‚Çë,Œ∏) for e ‚àà es]),RGB(0.2,0.2,0.2))
    # F=rgbftColor(csgUnion([SphericalPolygon([POINTS‚Å¥[i] for i ‚àà vertices(f)],Œ∏) for f ‚àà fs]),color,FT(0,0))
    F=rgbftColor(csgUnion([SphericalPolygon([POINTS‚Å¥[i] for i ‚àà vertices(f)],Œ∏) for f ‚àà fs]),color,FT(0.4,0.2))
    return csgUnion(V,E,F)
end

##%

function C‚Çà(Œ∏)
    h=1/2
    r=‚àö(1-h^2)

    R=1/sin(Œ∏)
    O=[0,0,0,cot(Œ∏)]
    N=O+[0,0,0,R]
    H=O-[0,0,0,‚àö(R^2-r^2)]

    POINTS, c‚ÇÅ=F‚ÇÜ
    POINTS=r*copy(POINTS)
    POINTS¬≥=copy(POINTS)
    POINTS‚Å¥=[[ùíë...,0]+H for ùíë ‚àà POINTS]
    c‚ÇÇ=NewCell(c‚ÇÅ,[-1,0,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÉ=NewCell(c‚ÇÇ,[-1,0,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÑ=NewCell(c‚ÇÅ,[1,0,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÖ=NewCell(c‚ÇÅ,[0,0,-1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÜ=NewCell(c‚ÇÖ,[0,-1,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚Çá=NewCell(c‚ÇÜ,[0,-1,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚Çà=NewCell(c‚ÇÖ,[0,1,0],Œ∏,POINTS¬≥, POINTS‚Å¥)

    cells=[c‚ÇÅ,c‚ÇÇ,c‚ÇÉ,c‚ÇÑ,c‚ÇÖ,c‚ÇÜ,c‚Çá,c‚Çà]
    return cells, POINTS¬≥, POINTS‚Å¥
end


##%

function C‚ÇÅ‚ÇÜ(Œ∏)
    h=1/2
    r=‚àö(1-h^2)

    R=1/sin(Œ∏)
    O=[0,0,0,cot(Œ∏)]
    N=O+[0,0,0,R]
    H=O-[0,0,0,‚àö(R^2-r^2)]

    POINTS, c‚ÇÅ=F‚ÇÑ
    POINTS=r*copy(POINTS)
    POINTS¬≥=copy(POINTS)
    POINTS‚Å¥=[[ùíë...,0]+H for ùíë ‚àà POINTS]
    V=[1,-2,0]
    c‚ÇÇ=NewCell(c‚ÇÅ,V,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÉ=NewCell(c‚ÇÇ,V,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÑ=NewCell(c‚ÇÉ,V,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÖ=NewCell(c‚ÇÅ,-V,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÜ=NewCell(c‚ÇÖ,-V,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚Çá=NewCell(c‚ÇÜ,-V,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚Çà=NewCell(c‚Çá,-V,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚Çâ=NewCell(c‚ÇÅ,[-2,-1,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    W=[-1,-0.5,1]
    c‚ÇÅ‚ÇÄ=NewCell(c‚Çâ,W,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÅ=NewCell(c‚ÇÅ‚ÇÄ,W,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÇ=NewCell(c‚ÇÅ‚ÇÅ,W,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÉ=NewCell(c‚Çâ,-W,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÑ=NewCell(c‚ÇÅ‚ÇÉ,-W,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÖ=NewCell(c‚ÇÅ‚ÇÑ,-W,Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÜ=NewCell(c‚ÇÅ‚ÇÖ,-W,Œ∏,POINTS¬≥, POINTS‚Å¥)

    cells=[c‚ÇÅ,c‚ÇÇ,c‚ÇÉ,c‚ÇÑ,c‚ÇÖ,c‚ÇÜ,c‚Çá,c‚Çà,c‚Çâ,c‚ÇÅ‚ÇÄ,c‚ÇÅ‚ÇÅ,c‚ÇÅ‚ÇÇ,c‚ÇÅ‚ÇÉ,c‚ÇÅ‚ÇÑ,c‚ÇÅ‚ÇÖ,c‚ÇÅ‚ÇÜ]
    return cells, POINTS¬≥, POINTS‚Å¥
end

##%

function C‚ÇÇ‚ÇÑ(Œ∏)
    h=1/‚àö2
    r=‚àö(1-h^2)

    R=1/sin(Œ∏)
    O=[0,0,0,cot(Œ∏)]
    N=O+[0,0,0,R]
    H=O-[0,0,0,‚àö(R^2-r^2)]

    POINTS, c‚ÇÅ=F‚Çà
    POINTS=r*copy(POINTS)
    POINTS¬≥=copy(POINTS)
    POINTS‚Å¥=[[ùíë...,0]+H for ùíë ‚àà POINTS]
    c‚ÇÇ=NewCell(c‚ÇÅ,[1,1,1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÉ=NewCell(c‚ÇÇ,[1,1,1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÑ=NewCell(c‚ÇÉ,[1,1,1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÖ=NewCell(c‚ÇÅ,-[1,1,1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÜ=NewCell(c‚ÇÖ,-[1,1,1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚Çá=NewCell(c‚ÇÅ,[1,-1,-1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚Çà=NewCell(c‚ÇÅ,[-1,1,-1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚Çâ=NewCell(c‚ÇÅ,[-1,-1,1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÄ=NewCell(c‚ÇÇ,[-1,0,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÅ=NewCell(c‚ÇÇ,[0,-1,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÇ=NewCell(c‚ÇÇ,[0,0,-1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÉ=NewCell(c‚ÇÉ,[1,-1,-1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÑ=NewCell(c‚ÇÉ,[-1,1,-1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÖ=NewCell(c‚ÇÉ,[-1,-1,1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÜ=NewCell(c‚ÇÑ,[-1,0,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚Çá=NewCell(c‚ÇÑ,[0,-1,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚Çà=NewCell(c‚ÇÑ,[0,0,-1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚Çâ=NewCell(c‚ÇÜ,[1,-1,-1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÇ‚ÇÄ=NewCell(c‚ÇÜ,[-1,1,-1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÇ‚ÇÅ=NewCell(c‚ÇÜ,[-1,-1,1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÇ‚ÇÇ=NewCell(c‚ÇÖ,[-1,0,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÇ‚ÇÉ=NewCell(c‚ÇÖ,[0,-1,0],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÇ‚ÇÑ=NewCell(c‚ÇÖ,[0,0,-1],Œ∏,POINTS¬≥, POINTS‚Å¥)


    cells=[c‚ÇÅ,c‚ÇÇ,c‚ÇÉ,c‚ÇÑ,c‚ÇÖ,c‚ÇÜ,c‚Çá,c‚Çà,c‚Çâ,c‚ÇÅ‚ÇÄ,c‚ÇÅ‚ÇÅ,c‚ÇÅ‚ÇÇ,c‚ÇÅ‚ÇÉ,c‚ÇÅ‚ÇÑ,c‚ÇÅ‚ÇÖ,c‚ÇÅ‚ÇÜ,c‚ÇÅ‚Çá,c‚ÇÅ‚Çà,c‚ÇÅ‚Çâ,c‚ÇÇ‚ÇÄ,c‚ÇÇ‚ÇÅ,c‚ÇÇ‚ÇÇ,c‚ÇÇ‚ÇÉ,c‚ÇÇ‚ÇÑ]
    return cells, POINTS¬≥, POINTS‚Å¥
end

##%

function C‚ÇÅ‚ÇÇ‚ÇÄ(Œ∏)
    h=norm([œÜ^3,0,0,0])/norm([œÜ^3,1,1,1])
    r=‚àö(1-h^2)

    R=1/sin(Œ∏)
    O=[0,0,0,cot(Œ∏)]
    N=O+[0,0,0,R]
    H=O-[0,0,0,‚àö(R^2-r^2)]

    POINTS, c‚ÇÅ=F‚ÇÅ‚ÇÇ
    POINTS=r*copy(POINTS)
    POINTS¬≥=copy(POINTS)
    POINTS‚Å¥=[[ùíë...,0]+H for ùíë ‚àà POINTS]
    Va,_=F‚ÇÇ‚ÇÄ
    Vb=[v-2*Va[1]*dot(Va[1],v) for v ‚àà Va]
    c‚ÇÇ=NewCell(c‚ÇÅ,Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÉ=NewCell(c‚ÇÇ,Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÑ=NewCell(c‚ÇÉ,Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÖ=NewCell(c‚ÇÑ,Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÜ=NewCell(c‚ÇÖ,Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚Çá=NewCell(c‚ÇÅ,-Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚Çà=NewCell(c‚Çá,-Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚Çâ=NewCell(c‚Çà,-Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥)
    c‚ÇÅ‚ÇÄ=NewCell(c‚Çâ,-Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥)

    cells=[c‚ÇÅ,c‚ÇÇ,c‚ÇÉ,c‚ÇÑ,c‚ÇÖ,c‚ÇÜ,c‚Çá,c‚Çà,c‚Çâ,c‚ÇÅ‚ÇÄ]

    push!(cells,NewCell(cells[1],Va[3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[1],Va[7],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[1],Va[8],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[1],Va[10],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[1],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[2],Vb[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[2],Vb[5],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[2],Vb[6],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[2],Vb[9],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[2],Vb[11],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[3],Va[3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[3],Va[7],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[3],Va[8],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[3],Va[10],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[3],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[4],Vb[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[4],Vb[5],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[4],Vb[6],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[4],Vb[9],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[4],Vb[11],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[5],Va[3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[5],Va[7],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[5],Va[8],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[5],Va[10],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[5],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[6],Vb[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[6],Vb[5],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[6],Vb[6],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[6],Vb[9],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[6],Vb[11],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[7],Vb[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[7],Vb[5],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[7],Vb[6],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[7],Vb[9],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[7],Vb[11],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[8],Va[3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[8],Va[7],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[8],Va[8],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[8],Va[10],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[8],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[9],Vb[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[9],Vb[5],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[9],Vb[6],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[9],Vb[9],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[9],Vb[11],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[10],Va[3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[10],Va[7],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[10],Va[8],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[10],Va[10],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[10],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))


    push!(cells,NewCell(cells[18],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[end],Va[5],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[end],-Va[11],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[end],-Va[11],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[end],-Va[11],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[end],-Va[11],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[end-4],Va[11],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[end],Va[11],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[end],Va[11],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[end],Va[11],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[end],Va[11],Œ∏,POINTS¬≥, POINTS‚Å¥))


    push!(cells,NewCell(cells[17+45],Va[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[17+45],Va[4],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[17+45],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[17+45],Vb[12],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[18+45],Va[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[18+45],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[18+45],Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[18+45],Va[6],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[18+45],Va[8],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[19+45],[-1,-2,3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[19+45],[1,-1,3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[19+45],Vb[12],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[19+45],Vb[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[19+45],[-1,-1,-1],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[20+45],Va[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[20+45],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[20+45],Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[20+45],Va[6],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[20+45],Va[8],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[21+45],[-1,-2,3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[21+45],[1,-1,3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[21+45],Vb[12],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[21+45],Vb[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[21+45],[-1,-1,-1],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[22+45],Va[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[22+45],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[22+45],Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[22+45],Va[6],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[22+45],Va[8],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[23+45],[-1,-2,3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[23+45],[1,-1,3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[23+45],[2,-2,-1],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[23+45],Vb[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[23+45],[-1,-1,-1],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[24+45],Va[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[24+45],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[24+45],Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[24+45],Va[6],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[24+45],Va[8],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[25+45],[-1,-2,3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[25+45],[1,-1,3],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[25+45],[2,-2,-1],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[25+45],Vb[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[25+45],[-1,-1,-1],Œ∏,POINTS¬≥, POINTS‚Å¥))

    push!(cells,NewCell(cells[26+45],Va[2],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[26+45],Va[12],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[26+45],Va[1],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[26+45],Va[6],Œ∏,POINTS¬≥, POINTS‚Å¥))
    push!(cells,NewCell(cells[26+45],Va[8],Œ∏,POINTS¬≥, POINTS‚Å¥))



    return cells, POINTS¬≥, POINTS‚Å¥
end

##%
M=120
for i ‚àà 0:2M
    Œ∏=œÄ/2*(Smooth(0,1,i/M)-Smooth(1,2,i/M))
    cells, POINTS¬≥, POINTS‚Å¥=C‚Çà(Œ∏)
    render(Cells2Object(cells,Œ∏,POINTS‚Å¥,color=RGB(0.2,1,1),r‚Çë=0.012,r·µ•=0.03),camera=LngLatCamera(lng=180¬∞+360¬∞*i/M,lat=25¬∞,pers=0.2,zoom=0.15,width=1200,height=900),name="8-Cell",index=i+1)
end

M=120
for i ‚àà 0:2M
    Œ∏=œÄ/2*(Smooth(0,1,i/M)-Smooth(1,2,i/M))
    cells, POINTS¬≥, POINTS‚Å¥=C‚ÇÅ‚ÇÜ(Œ∏)
    render(Cells2Object(cells,Œ∏,POINTS‚Å¥,color=RGB(0.2,1,1)),camera=LngLatCamera(lng=180¬∞+360¬∞*i/M,lat=25¬∞,pers=0.2,zoom=0.12,width=600,height=450),name="16-Cell",index=i+1)
end

M=120
for i ‚àà 0:2M
    Œ∏=œÄ/2*(Smooth(0,1,i/M)-Smooth(1,2,i/M))
    cells, POINTS¬≥, POINTS‚Å¥=C‚ÇÇ‚ÇÑ(Œ∏)
    render(Cells2Object(cells,Œ∏,POINTS‚Å¥,color=RGB(0.2,1,1)),camera=LngLatCamera(lng=180¬∞+360¬∞*i/M,lat=25¬∞,pers=0.2,zoom=0.12,width=600,height=450),name="24-Cell",index=i+1)
end

M=120
i=24
Œ∏=œÄ/2*(Smooth(0,1,i/M)-Smooth(1,2,i/M))
cells, POINTS¬≥, POINTS‚Å¥=C‚ÇÅ‚ÇÇ‚ÇÄ(Œ∏)
render(Cells2Object(cells,Œ∏,POINTS‚Å¥,color=RGB(0.2,1,1)),camera=LngLatCamera(lng=180¬∞+360¬∞*i/M,lat=25¬∞,pers=0.2,zoom=0.12,width=600,height=450),name="120-CellB",index=i+1)

M=120
for i ‚àà 0:2M
    Œ∏=œÄ/2*(Smooth(0,1,i/M)-Smooth(1,2,i/M))
    cells, POINTS¬≥, POINTS‚Å¥=C‚ÇÅ‚ÇÇ‚ÇÄ(Œ∏)
    try
        render(Cells2Object(cells,Œ∏,POINTS‚Å¥,color=RGB(0.2,1,1)),camera=LngLatCamera(lng=180¬∞+360¬∞*i/M,lat=25¬∞,pers=0.2,zoom=0.07,width=500,height=500),name="120-CellD",index=i+1)
    catch
        println(i)
    end
end
